---
layout: post
title: What is HTTP?
date: 2021-11-15 17:09:00 +0900
category: internet
---
# What is HTTP?



### HTTP
> Hyper Text Transfer Protocol
HTTP는 HTML 문서와 같은 리소스들을 가져올 수 있도록 해주는 프로토콜이다. HTTP는 웹에서 이루어지는 모든 데이터 교환의 기초이며, 클라이언트-서버 프로토콜이기도 하다.
클라이언트-서버 프로토콜이란 수신자 측에 의해 요청이 초기화되는 프로토콜을 의미한다.
클라이언트와 서버들은 개별적인 메시지 교환에 의해 통신한다. 보통 브라우저인 클라이언트에 의해 전송되는 메시지를 요청(requests)이라고 부르며, 그에 대해 서버에서 응답으로 전송되는 메시지를 응답(responses)이라고 부른다.
![alt text](/public/img/HTTP&layers.png)

### HTTP 기반 시스템의 구성요소
HTTP는 클라이언트-서버 프로토콜이다. 요청은 하나의 개체, 사용자 에이전트(또는 그것을 대신하는 프록시)에 의해 전송된다.
대부분의 경우, 사용자 에이전트는 브라우저지만, 무엇이든 될 수 있다.

각각의 개별적인 요청들은 서버로 보내지며, 서버는 요청을 처리하고 response라고 불리는 응답을 제공한다. 이 요청과 응답 사이에는 여러 개체들이 있는데, 예를 들면 다양한 작업을 수행하는 게이트웨이 또는 캐시 역할을 하는 프록시 등이 있다.
![alt text](/public/img/Client-server-chain.png)
> HTTP 요청/응답
    1. 클라이언트가 웹에 HTTP요청을 보낸다.
    2. 웹 서버가 요청을 수신한다.
    3. 서버는 요청을 처리하기 위해 애플리케이션을 실행한다.
    4. 서버는 브라우저에 HTTP응답을 반환 한다.
    5. 클라이언트가 응답을 수신한다.
> HTTP 요청/응답 서클
    1. 브라우저가 HTML페이지를 요청한다. 서버는 HTML파일을 반환한다.
    2. 브라우저가 스타일 시트를 요청한다. 서버는 CSS파일을 반환한다.
    3. 브라우저에서 JPG이미지를 요청한다. 서버는 JPG파일을 반환한다.
    4. 브라우저가 JavaScript코드를 요청한다. 서버가 JS파일을 반환한다.
    5. 브라우저가 데이터를 요청한다. 서버는 데이터(XML 또는 JSON)를 반환한다.

##### 클라이언트: 사용자 에이전트
사용자 에이전트는 사용자를 대신하여 동작하는 모든 도구이다. 이 역할은 주로 브라우저에 의해 수행된다. (엔지니어들과 자신들의 애플리케이션을 디버그하는 웹 개발자들이 사용하는 프로그램들은 예외)

브라우저는 항상 요청을 보내는 개체이며 결코 서버가 될 수 없다.

웹 페이지를 표시하기 위해, 브라우저는 페이지의 HTML문서를 가져오기 위한 요청을 전송한 뒤, 파일을 구문 분석하여 실행해야 할 스크립트 그리고 페이지 내 포함된 하위 리소스들을 잘 표시하기 위한 레이아웃 정보(CSS)에 대응하는 추가적인 요청들은 가져온다. 그런 뒤에 브라우저는 완전한 문서인 웹 페이지를 표시하기 위해 그런 리소스들을 혼합한다. 브라우저에 의해 실행된 스크립트는 이후 단계에서 좀 더 많은 리소스들을 가져올 수 있으며 브라우저는 그에 따라 웹 페이지를 갱신하게 된다.

##### 웹 서버
통신 채널의 반대편에는 클라이언트에 의한 요청에 대한 문서를 제공하는 서버가 존재한다. 서버는 사실상 논리적으로 단일 기계이다.

서버는 반드시 단일 머신일 필요는 없지만, 여러개의 서버를 동일한 머신 위에서 호스팅 할 수는 있다. HTTP/1.1과 Host 헤더를 이용하여, 동일한 IP주소를 공유할 수도 있다.

##### 프록시
웹 브라우저와 서버 사이에는 수많은 컴퓨터와 머신이 HTTP메시지를 이어 받고 전달한다. 여러 계층으로 이루어진 웹 스택 구조에서 이러한 컴퓨터/머신들은 대부분 전송, 네트워크 혹은 물리 계층에서 동작하며, 성능에 상당히 큰 영향을 주지만 HTTP계층에서는 이들이 어떻게 동작하는지 눈에 보이지 않는다. 이러한 컴퓨터/머신 중에서도 애플리케이션 계층에서 동작하는 것들을 일반적으로 프록시라고 부른다. 프록시는 눈에 보이거나 그렇지 않을 수도 있으며 다양한 기능들을 수행할 수 있다.

### XHR - XML HTTP 요청
모든 브라우저에는 XHR(XMLHttpRequest Object)이 내장되어 있다.
XHR은 웹 브라우저와 웹 서버 간에 데이터를 전송하는 데 사용되는 JavaScript 개체이다.
XHR은 웹 페이지를 수정하기 위한 목적으로데이터를 요청하고 수신하는 데 자주 사용되낟.
HTTP 이외의 다른 프로토콜과 함께 사용되며 데이터는 HTML, CSS, XML, JSON 및 일반 텍스트와 같은 다양한 유형이 될 수 있다.


참고 
[https://developer.mozilla.org/ko/docs/Web/HTTP/Overview][mozilla]
[https://www.w3schools.com/whatis/whatis_http.asp][w3s]

[mozilla]: https://developer.mozilla.org/ko/docs/Web/HTTP/Overview
[w3s]: https://www.w3schools.com/whatis/whatis_http.asp